@model List<CartItem>
@{
    ViewData["Title"] = "Giỏ hàng";
}

<style>
    .cart-header {
        background: linear-gradient(135deg, var(--light) 0%, white 100%);
        border-radius: 15px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        box-shadow: 0 3px 10px rgba(0,0,0,0.1);
    }

        .cart-header h2 {
            margin: 0;
            color: var(--primary);
            font-weight: 700;
        }

        .cart-header i {
            color: var(--accent);
            margin-right: 0.5rem;
        }

    .empty-cart {
        background: white;
        border-radius: 20px;
        padding: 4rem 2rem;
        text-align: center;
        box-shadow: 0 5px 20px rgba(0,0,0,0.1);
        margin: 2rem 0;
    }

        .empty-cart i {
            color: var(--secondary);
            margin-bottom: 1rem;
            animation: float 3s ease-in-out infinite;
        }

    @@keyframes float {
        0%, 100%

    {
        transform: translateY(0px);
    }

    50% {
        transform: translateY(-10px);
    }

    }

    .cart-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0,0,0,0.1);
        border: none;
        overflow: hidden;
    }

    .cart-table {
        margin: 0;
    }

        .cart-table th {
            background: linear-gradient(135deg, var(--primary), #A0522D);
            color: white;
            border: none;
            padding: 1rem;
            font-weight: 600;
            text-align: center;
        }

        .cart-table td {
            padding: 1.2rem;
            vertical-align: middle;
            border-color: #f8f9fa;
        }

    .product-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .product-image {
        width: 60px;
        height: 60px;
        border-radius: 12px;
        background: linear-gradient(45deg, #f8f9fa, #e9ecef);
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        overflow: hidden;
    }

        .product-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 12px;
        }

        .product-image .fallback-icon {
            color: var(--secondary);
            font-size: 1.5rem;
        }

    .product-details h6 {
        margin: 0 0 0.3rem 0;
        font-weight: 600;
        color: var(--dark);
    }

    .product-category {
        font-size: 0.8rem;
        color: var(--secondary);
        background: var(--light);
        padding: 0.2rem 0.5rem;
        border-radius: 10px;
    }

    .price-display {
        font-size: 1.1rem;
        font-weight: 600;
        color: var(--primary);
    }

    .quantity-control {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .quantity-btn {
        background: var(--primary);
        color: white;
        border: none;
        border-radius: 50%;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
        cursor: pointer;
    }

        .quantity-btn:hover {
            background: #A0522D;
            transform: scale(1.1);
        }

    .quantity-input {
        width: 60px;
        text-align: center;
        border: 2px solid var(--light);
        border-radius: 8px;
        padding: 0.3rem;
        font-weight: 600;
    }

        .quantity-input:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 0.2rem rgba(139, 69, 19, 0.25);
        }

    .total-price {
        font-size: 1.2rem;
        font-weight: 700;
        color: var(--primary);
    }

    .remove-btn {
        background: linear-gradient(135deg, #dc3545, #c82333);
        color: white;
        border: none;
        border-radius: 50%;
        width: 35px;
        height: 35px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
    }

        .remove-btn:hover {
            transform: scale(1.1);
            box-shadow: 0 5px 15px rgba(220, 53, 69, 0.3);
        }

    .cart-summary {
        background: linear-gradient(135deg, var(--primary), #A0522D);
        color: white;
        margin: 0;
    }

        .cart-summary th {
            background: none;
            font-size: 1.3rem;
            padding: 1.5rem;
        }

    .cart-footer {
        background: var(--light);
        padding: 1.5rem;
        border: none;
    }

    .btn-continue {
        background: white;
        color: var(--primary);
        border: 2px solid var(--primary);
        border-radius: 25px;
        padding: 0.7rem 1.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
    }

        .btn-continue:hover {
            background: var(--primary);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(139, 69, 19, 0.3);
        }

    .btn-checkout {
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
        border: none;
        border-radius: 25px;
        padding: 0.8rem 2rem;
        font-weight: 600;
        font-size: 1.1rem;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

        .btn-checkout::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
            transition: left 0.5s;
        }

        .btn-checkout:hover::before {
            left: 100%;
        }

        .btn-checkout:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(40, 167, 69, 0.3);
        }

    .cart-stats {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background: white;
        padding: 1rem;
        border-radius: 10px;
        margin-bottom: 1rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .stat-item {
        text-align: center;
    }

    .stat-number {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--primary);
    }

    .stat-label {
        font-size: 0.9rem;
        color: var(--secondary);
    }

    @@media (max-width: 768px) {
        .cart-table th, .cart-table td

    {
        padding: 0.5rem;
        font-size: 0.9rem;
    }

    .product-info {
        flex-direction: column;
        text-align: center;
        gap: 0.5rem;
    }

    .product-image {
        width: 50px;
        height: 50px;
    }

    .cart-footer {
        text-align: center;
    }

        .cart-footer .d-flex {
            flex-direction: column;
            gap: 1rem;
        }

    }
</style>

<!-- Page Header -->
<div class="cart-header">
    <h2><i class="fas fa-shopping-cart"></i> Giỏ hàng của bạn</h2>
    @if (Model.Count > 0)
    {
        <p class="text-muted mb-0 mt-1">Bạn có @Model.Count sản phẩm trong giỏ hàng</p>
    }
</div>

@if (Model.Count == 0)
{
    <div class="empty-cart">
        <i class="fas fa-shopping-cart fa-5x"></i>
        <h4 class="fw-bold mb-3">Giỏ hàng trống</h4>
        <p class="text-muted mb-4">Bạn chưa có sản phẩm nào trong giỏ hàng<br>Hãy khám phá những món trà sữa tuyệt vời của chúng tôi!</p>
        <a class="btn btn-primary btn-lg px-4" asp-controller="SanPham" asp-action="Index">
            <i class="fas fa-shopping-bag me-2"></i> Mua sắm ngay
        </a>
    </div>
}
else
{
    <!-- Cart Statistics -->
    <div class="cart-stats">
        <div class="stat-item">
            <div class="stat-number">@Model.Count</div>
            <div class="stat-label">Sản phẩm</div>
        </div>
        <div class="stat-item">
            <div class="stat-number">@Model.Sum(x => x.SoLuong)</div>
            <div class="stat-label">Số lượng</div>
        </div>
        <div class="stat-item">
            <div class="stat-number">@Model.Sum(x => x.ThanhTien).ToString("N0")</div>
            <div class="stat-label">Tổng tiền (VNĐ)</div>
        </div>
    </div>

    <div class="card cart-card">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table cart-table">
                    <thead>
                        <tr>
                            <th>Sản phẩm</th>
                            <th>Đơn giá</th>
                            <th>Số lượng</th>
                            <th>Thành tiền</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <div class="product-info">
                                        <div class="product-image">
                                            @if (!string.IsNullOrEmpty(item.HinhAnh))
                                            {
                                                <img src="~/images/products/@item.HinhAnh"
                                                     alt="@item.TenSP"
                                                     onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';" />
                                                <div class="fallback-icon" style="display: none;">
                                                    <i class="fas fa-coffee"></i>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="fallback-icon">
                                                    <i class="fas fa-coffee"></i>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <span class="price-display">@item.Gia.ToString("N0") VNĐ</span>
                                </td>
                                <td>
                                    <div class="quantity-control">
                                        <button type="button" class="quantity-btn" onclick="updateQuantity('@item.MaSP', @item.SoLuong - 1)">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                        <input type="number" class="quantity-input" value="@item.SoLuong"
                                               min="1" onchange="updateQuantity('@item.MaSP', this.value)">
                                        <button type="button" class="quantity-btn" onclick="updateQuantity('@item.MaSP', @item.SoLuong + 1)">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>
                                </td>
                                <td>
                                    <span class="total-price">@item.ThanhTien.ToString("N0") VNĐ</span>
                                </td>
                                <td>
                                    <button class="remove-btn" onclick="removeItem('@item.MaSP', '@item.TenSP')">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr class="cart-summary">
                            <th colspan="3">Tổng cộng:</th>
                            <th>@Model.Sum(x => x.ThanhTien).ToString("N0") VNĐ</th>
                            <th></th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        <div class="cart-footer">
            <div class="d-flex justify-content-between align-items-center">
                <a class="btn btn-continue" asp-controller="SanPham" asp-action="Index">
                    <i class="fas fa-arrow-left me-2"></i> Tiếp tục mua sắm
                </a>
                <a class="btn btn-checkout" asp-action="Checkout">
                    <i class="fas fa-credit-card me-2"></i> Thanh toán (@Model.Sum(x => x.ThanhTien).ToString("N0") VNĐ)
                </a>
            </div>
        </div>
    </div>
}

<script>
    function updateQuantity(maSP, newQuantity) {
        if (newQuantity < 1) return;

        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '@Url.Action("UpdateCart")';

        const maSPInput = document.createElement('input');
        maSPInput.type = 'hidden';
        maSPInput.name = 'maSP';
        maSPInput.value = maSP;

        const quantityInput = document.createElement('input');
        quantityInput.type = 'hidden';
        quantityInput.name = 'soLuong';
        quantityInput.value = newQuantity;

        form.appendChild(maSPInput);
        form.appendChild(quantityInput);
        document.body.appendChild(form);
        form.submit();
    }

    function removeItem(maSP, tenSP) {
        if (confirm(`Bạn có chắc muốn xóa "${tenSP}" khỏi giỏ hàng?`)) {
            window.location.href = '@Url.Action("RemoveFromCart")?maSP=' + maSP;
        }
    }

    // Add loading states
    document.addEventListener('DOMContentLoaded', function() {
        const quantityInputs = document.querySelectorAll('.quantity-input');
        quantityInputs.forEach(input => {
            input.addEventListener('change', function() {
                const row = this.closest('tr');
                row.style.opacity = '0.6';
                row.style.pointerEvents = 'none';
            });
        });

        // Animate cart statistics on load
        const statNumbers = document.querySelectorAll('.stat-number');
        statNumbers.forEach((stat, index) => {
            setTimeout(() => {
                stat.style.animation = 'pulse 0.6s ease';
            }, index * 200);
        });
    });
</script>